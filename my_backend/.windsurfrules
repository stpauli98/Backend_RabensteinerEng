Piši Python kôd za Flask API koji je:

Čist i organizovan: koristi jasan strukturalni raspored (Blueprints, validaciju podataka, čiste rute).

Optimalan: koristi najbrže moguće načine za čitanje, obradu i vraćanje podataka (npr. direktno rad sa BytesIO, pandas vektorizacijom, minimalnim I/O operacijama).

Nepreopterećen: samo one funkcije i biblioteke koje su potrebne – bez dodavanja nepotrebnih klasa, helper funkcija, ili komplikacija.

Čitljiv i jednostavan: kôd treba biti lako razumljiv drugima koji ga kasnije budu održavali (jasni nazivi funkcija i promenljivih, bez nepotrebnih skraćenica).

Bez ponavljanja: primeni DRY princip – nemoj kopirati isti kod, koristi pomoćne funkcije samo kada su zaista opravdane.

Fokusiran: svaka funkcija treba da ima jednu jasnu odgovornost (npr. upload_chunk, process_file, generate_response).

Robustan: dodaj osnovno hvatanje grešaka (try/except) samo tamo gde je potrebno da aplikacija bude stabilna.

Brz i efikasan: procesuiraj velike fajlove i podatke tako da je memorijsko opterećenje minimalno, a vreme obrade što kraće.

Prilagođen za produkciju: razmišljaj kao da se kôd koristi u realnoj aplikaciji, gde je bitno da bude skalabilan, stabilan i bez viška.

Tvoje zadatke su:

Ukloni ponavljanje koda i prebaci duplikate u funkcije gde je to moguće.

Napravi kod čitljivim i logički organizovanim, sa jasnim nazivima promenljivih i funkcija.

Dodaj komentare tamo gde je potrebno, ali izbegavaj suvišne.

Optimizuj algoritme i upotrebu biblioteka (npr. pandas, numpy, sklearn).

Sačuvaj funkcionalnost koda u potpunosti.

Koristi Python best practices (npr. f-stringove, list comprehensions kada su prikladni, izbegavaj mutacije sa .iloc[i] unutar petlji ako postoji bolji način).

Po potrebi, razbij dugačke funkcije u manje logičke celine.